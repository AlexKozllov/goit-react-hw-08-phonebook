{"version":3,"sources":["components/app.module.css","components/animation/shiftAppear.module.css","components/alert/alert.module.css","components/contactForm/contactForm.module.css","components/animation/shiftAlert.module.css","components/filter/filter.module.css","components/contactList/contactList.module.css","components/animation/shiftAnimation.module.css","components/animation/scaleAnimation.module.css","components/userMenu/userMenu.module.css","components/alert/Alert.js","redux/selectors/contactsSelectors.js","components/contactForm/ContactForm.js","redux/operations/phBookOperations.js","components/filter/Filter.js","components/contactList/ContactList.js","components/userMenu/UserMenu.js","pages/contacts/Contacts.js"],"names":["module","exports","Alert","text","className","s","box","getFilter","state","contacts","filter","getListContacts","items","getVisibleContacts","createSelector","listContacts","filterValue","contact","name","toLocaleLowerCase","includes","InitialState","number","ContactForm","useState","setContact","isValidateForm","setIsValidateForm","isExistContact","setIsExistContact","listContact","useSelector","dispatch","useDispatch","handleInput","e","target","value","prev","validateForm","find","item","toLowerCase","onCheckUnique","console","log","CSSTransition","in","classNames","shiftAlert","timeout","unmountOnExit","contactForm","onSubmit","preventDefault","addContactRequest","postContacts","then","data","addContactSuccess","catch","error","addContactError","type","onChange","addBtn","Filter","findField","setFilter","ContactList","visibleContacts","length","scaleAnimation","TransitionGroup","component","map","shiftAnimation","listItem","itemName","onClick","id","removeContactRequest","removeContact","removeContactSuccess","removeContactError","UserMenu","curentToken","auth","token","getCurentToken","userEmail","user","email","getUserEmail","container","mail","logoutUser","btn","Contacts","isAuthenticated","getIsAuthenticated","isLoading","loading","getLoading","history","useHistory","useEffect","getContactsRequest","getContacts","getContactsSuccess","getContactsError","replace","ModalLoader","wrapper","appear","shiftAppear","headerPhoneboo"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,eAAiB,4BAA4B,UAAY,yB,oBCA1GD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,aAAe,oC,oBCAtED,EAAOC,QAAU,CAAC,IAAM,qB,oBCAxBD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,8B,oBCA1ED,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,YAAc,gCAAgC,KAAO,yBAAyB,WAAa,iC,oBCA/ID,EAAOC,QAAU,CAAC,UAAY,0BAA0B,aAAa,2BAA2B,oBAAoB,kCAAkC,YAAY,0BAA0B,mBAAmB,mC,oBCA/MD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,SAAW,gC,oBCAtED,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,YAAc,oCAAoC,KAAO,6BAA6B,WAAa,qC,oBCA3JD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,YAAc,oCAAoC,KAAO,6BAA6B,WAAa,qC,oBCA3JD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,IAAM,wB,yJCYjDC,EATD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACE,sBAAKC,UAAWC,IAAEC,IAAlB,UACE,0CACA,4BAAIH,Q,4DCLJI,EAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,QACtCC,EAAkB,SAACH,GAAD,OAAWA,EAAMC,SAASG,OAI5CC,EAAqBC,YACzB,CAACH,EAAiBJ,IAClB,SAACQ,EAAcC,GACb,OAAMA,EACGD,EAAaL,QAAO,SAACO,GAAD,OACzBA,EAAQC,KACLC,oBACAC,SAASJ,EAAYG,wBAEdJ,KCLZM,EAAe,CACnBH,KAAM,GACNI,OAAQ,IA6FKC,EA1FK,WAAO,IAAD,EACMC,mBAAS,eAAKH,IADpB,mBACjBJ,EADiB,KACRQ,EADQ,OAEoBD,oBAAS,GAF7B,mBAEjBE,EAFiB,KAEDC,EAFC,OAGoBH,oBAAS,GAH7B,mBAGjBI,EAHiB,KAGDC,EAHC,KAKlBC,EAAcC,aAAY,SAACvB,GAAD,OAAWG,EAAgBH,MAErDwB,EAAWC,cAEXC,EAAc,SAACC,GAAO,IAAD,EACDA,EAAEC,OAAlBlB,EADiB,EACjBA,KAAMmB,EADW,EACXA,MACdZ,GAAW,SAACa,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBpB,EAAOmB,QAqBrCE,EAAe,WAAO,IAClBrB,EAAiBD,EAAjBC,KAAMI,EAAWL,EAAXK,OACd,OAAKJ,GAASI,GAKRJ,GAAUI,GACdK,GAAkB,GAjBA,SAACT,GACrB,IAAMU,IAAmBE,EAAYU,MACnC,SAACC,GAAD,OAAUA,EAAKvB,KAAKwB,gBAAkBxB,EAAKwB,iBAI7C,OADiBb,IAAjBD,IACQA,EAaDe,CAAczB,KAPnBS,GAAkB,GAClBiB,QAAQC,IAAI,aACL,IAQX,OACE,qCACE,cAACC,EAAA,EAAD,CACEC,GAAInB,EACJoB,WAAYC,IACZC,QAAS,IACTC,eAAa,EAJf,SAME,cAAC,EAAD,CAAOhD,KAAK,+BAEd,cAAC2C,EAAA,EAAD,CACEC,IAAKrB,EACLsB,WAAYC,IACZC,QAAS,IACTC,eAAa,EAJf,SAME,cAAC,EAAD,CAAOhD,KAAK,0BAEd,uBAAMC,UAAWC,IAAE+C,YAAaC,SAjDf,SAAClB,GAGpB,ICjBgB1B,GDehB0B,EAAEmB,iBAEqBf,OAEvBP,GCnBgBvB,EDmBI,eAAKQ,GCnBI,SAACe,GAChCA,EAASuB,eAETC,YAAa/C,GACVgD,MAAK,SAACC,GACL1B,EAAS2B,YAAkBD,OAE5BE,OAAM,SAACC,GAAD,OAAW7B,EAAS8B,YAAgBD,UDa3CpC,EAAW,eAAKJ,MA2Cd,UACE,yCAEE,uBACE0C,KAAK,OACL7C,KAAK,OACLmB,MAAOpB,EAAQC,KACf8C,SAAU9B,OAGd,2CAEE,uBACE6B,KAAK,MACL7C,KAAK,SACLmB,MAAOpB,EAAQK,OACf0C,SAAU9B,OAGd,wBAAQ9B,UAAWC,IAAE4D,OAAQF,KAAK,SAAlC,gC,2BE9EOG,EAfA,SAAC,GAAqB,IAAnBlD,EAAkB,EAAlBA,YACVgB,EAAWC,cAMjB,OACE,uBAAM7B,UAAWC,IAAE8D,UAAnB,UACE,uDACA,uBAAO9B,MAAOrB,EAAagD,SAPV,SAAC7B,GAAO,IACnBE,EAAUF,EAAEC,OAAZC,MACRL,EAASoC,YAAU/B,W,sDCkDRgC,EA5CK,WAClB,IAAMrC,EAAWC,cAEXlB,EAAegB,aAAY,SAACvB,GAAD,OAAWG,EAAgBH,MACtD8D,EAAkBvC,aAAY,SAACvB,GAAD,OAAWK,EAAmBL,MAC5DE,EAASqB,aAAY,SAACvB,GAAD,OAAWD,EAAUC,MAEhD,OACE,qCACE,cAACsC,EAAA,EAAD,CACEC,GAAIhC,EAAawD,OAAS,EAC1BvB,WAAYwB,IACZtB,QAAS,IACTC,eAAa,EAJf,SAME,cAAC,EAAD,CAAQnC,YAAaN,MAGvB,cAAC+D,EAAA,EAAD,CAAiBC,UAAU,KAA3B,SACGJ,EAAgBK,KAAI,SAAClC,GAAD,OACnB,cAACK,EAAA,EAAD,CACEE,WAAY4B,IACZ1B,QAAS,IAFX,SAKE,qBAAI9C,UAAWC,IAAEwE,SAAjB,UACE,sBAAMzE,UAAWC,IAAEyE,SAAnB,SAA8BrC,EAAKvB,OAAa,IAChD,+BAAOuB,EAAKnB,SACZ,wBACEyC,KAAK,SACLgB,QAAS,WFVK,IAACC,EEWbhD,GFXagD,EEWkBvC,EAAKuC,GFXhB,SAAChD,GACrCA,EAASiD,eACTC,YAAcF,GACXvB,MAAK,WACJzB,EAASmD,YAAqBH,OAE/BpB,OAAM,SAACC,GAAD,OAAW7B,EAASoD,YAAmBvB,WEEpC,sBALGpB,EAAKuC,a,iDCXPK,EAnBE,WACf,IAAMC,EAAcvD,aAAY,SAACvB,GAAD,OLNX,SAACA,GAAD,OAAWA,EAAM+E,KAAKC,MKMAC,CAAejF,MACpDkF,EAAY3D,aAAY,SAACvB,GAAD,OLNX,SAACA,GAAD,OAAWA,EAAM+E,KAAKI,KAAKC,MKMLC,CAAarF,MAChDwB,EAAWC,cAMjB,OACE,sBAAK7B,UAAWC,IAAEyF,UAAlB,UACE,oBAAI1F,UAAWC,IAAE0F,KAAjB,SAAwBL,IACxB,wBAAQ3B,KAAK,SAASgB,QAPL,SAAC5C,GACpBH,EAASgE,YAAWV,KAM2BlF,UAAWC,IAAE4F,IAA1D,wBCgCSC,UAtCE,WACf,IAAMlE,EAAWC,cACXkE,EAAkBpE,aAAY,SAACvB,GAAD,OAAW4F,YAAmB5F,MAC5D6F,EAAYtE,aAAY,SAACvB,GAAD,ONjBb,SAACA,GAAD,OAAWA,EAAM8F,QMiBOC,CAAW/F,MAE9CgG,EAAUC,cAUhB,OARAC,qBAAU,WACHP,EAILnE,GJD0B,SAACA,GAC7BA,EAAS2E,eAETC,cACGnD,MAAK,SAACC,GACL1B,EAAS6E,YAAmBnD,OAE7BE,OAAM,SAACC,GAAD,OAAW7B,EAAS8E,YAAiBjD,UIT1C2C,EAAQO,QAAQ,YAIjB,IAGD,qCACGV,GAAa,cAACW,EAAA,EAAD,IACd,sBAAK5G,UAAWC,IAAE4G,QAAlB,UACE,cAACnE,EAAA,EAAD,CACEC,IAAI,EACJmE,QAAM,EACNlE,WAAYmE,IACZjE,QAAS,IACTC,eAAa,EALf,SAOE,sBAAK/C,UAAWC,IAAEyF,UAAlB,UACE,oBAAI1F,UAAWC,IAAE+G,eAAjB,uBACCjB,GAAmB,cAAC,EAAD,SAGxB,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/3.a20abfcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__1idUk\",\"headerPhoneboo\":\"app_headerPhoneboo__3PyMw\",\"container\":\"app_container__3x7K1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"shiftAppear_appear__17hkX\",\"appearActive\":\"shiftAppear_appearActive__2DH0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"alert_box__2B-pO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__3zSID\",\"addBtn\":\"contactForm_addBtn__4MgGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"shiftAlert_enter__2lBms\",\"enterActive\":\"shiftAlert_enterActive__3ZaqO\",\"exit\":\"shiftAlert_exit__1692t\",\"exitActive\":\"shiftAlert_exitActive__14rjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findField\":\"filter_findField__1__Oo\",\"fade-enter\":\"filter_fade-enter__3tmh0\",\"fade-enter-active\":\"filter_fade-enter-active__3dwgJ\",\"fade-exit\":\"filter_fade-exit__1tiqb\",\"fade-exit-active\":\"filter_fade-exit-active__kq1x6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactList_listItem__2I0mP\",\"itemName\":\"contactList_itemName__2v0WL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"shiftAnimation_enter__3qlll\",\"enterActive\":\"shiftAnimation_enterActive__3wpYN\",\"exit\":\"shiftAnimation_exit__3IhR1\",\"exitActive\":\"shiftAnimation_exitActive__3zdhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"scaleAnimation_enter__1XPdc\",\"enterActive\":\"scaleAnimation_enterActive__2c0M5\",\"exit\":\"scaleAnimation_exit__15Qb2\",\"exitActive\":\"scaleAnimation_exitActive__-6H8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"userMenu_container__64yUk\",\"btn\":\"userMenu_btn__3nSaF\"};","import React from \"react\";\r\n\r\nimport s from \"./alert.module.css\";\r\n\r\nconst Alert = ({ text }) => {\r\n  return (\r\n    <div className={s.box}>\r\n      <h4>Warning!</h4>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.loading;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getListContacts = (state) => state.contacts.items;\r\nconst getCurentToken = (state) => state.auth.token;\r\nconst getUserEmail = (state) => state.auth.user.email;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getListContacts, getFilter],\r\n  (listContacts, filterValue) => {\r\n    if (!!filterValue) {\r\n      return listContacts.filter((contact) =>\r\n        contact.name\r\n          .toLocaleLowerCase()\r\n          .includes(filterValue.toLocaleLowerCase())\r\n      );\r\n    } else return listContacts;\r\n  }\r\n);\r\n\r\nexport {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getListContacts,\r\n  getCurentToken,\r\n  getUserEmail,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Alert from \"../alert/Alert\";\r\n\r\nimport s from \"./contactForm.module.css\";\r\nimport shiftAlert from \"../animation/shiftAlert.module.css\";\r\n\r\nimport { addContact } from \"../../redux/operations/phBookOperations\";\r\nimport { getListContacts } from \"../../redux/selectors/contactsSelectors\";\r\n\r\nconst InitialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const [contact, setContact] = useState({ ...InitialState });\r\n  const [isValidateForm, setIsValidateForm] = useState(true);\r\n  const [isExistContact, setIsExistContact] = useState(false);\r\n\r\n  const listContact = useSelector((state) => getListContacts(state));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const isValidateForm = validateForm();\r\n    if (!isValidateForm) return;\r\n    dispatch(addContact({ ...contact }));\r\n    setContact({ ...InitialState });\r\n  };\r\n\r\n  const onCheckUnique = (name) => {\r\n    const isExistContact = !!listContact.find(\r\n      (item) => item.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n    isExistContact ? setIsExistContact(true) : setIsExistContact(false);\r\n    return !isExistContact;\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { name, number } = contact;\r\n    if (!name || !number) {\r\n      setIsValidateForm(false);\r\n      console.log(\"ListItem\");\r\n      return false;\r\n    }\r\n    if (!!name && !!number) {\r\n      setIsValidateForm(true);\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={isExistContact}\r\n        classNames={shiftAlert}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Alert text=\"Contact is already exist\" />\r\n      </CSSTransition>\r\n      <CSSTransition\r\n        in={!isValidateForm}\r\n        classNames={shiftAlert}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Alert text=\"Some filed is empty\" />\r\n      </CSSTransition>\r\n      <form className={s.contactForm} onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={contact.name}\r\n            onChange={handleInput}\r\n          ></input>\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={contact.number}\r\n            onChange={handleInput}\r\n          ></input>\r\n        </label>\r\n        <button className={s.addBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import {\r\n  postContacts,\r\n  getContacts,\r\n  removeContact,\r\n} from \"../../servises/fatchToDB\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactError,\r\n  removeContactSuccess,\r\n  removeContactRequest,\r\n} from \"../actions/phBookActions\";\r\n\r\nconst addContact = (contacts) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  postContacts(contacts)\r\n    .then((data) => {\r\n      dispatch(addContactSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nconst getContactsList = () => (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n\r\n  getContacts()\r\n    .then((data) => {\r\n      dispatch(getContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(getContactsError(error)));\r\n};\r\n\r\nconst removeContactFromList = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  removeContact(id)\r\n    .then(() => {\r\n      dispatch(removeContactSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport { addContact, getContactsList, removeContactFromList };\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/phBookActions\";\r\n\r\nimport s from \"./filter.module.css\";\r\n\r\nconst Filter = ({ filterValue }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const hendleFilter = (e) => {\r\n    const { value } = e.target;\r\n    dispatch(setFilter(value));\r\n  };\r\n  return (\r\n    <form className={s.findField}>\r\n      <h3>Find contacts by name</h3>\r\n      <input value={filterValue} onChange={hendleFilter} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Filter from \"../filter/Filter\";\r\n\r\nimport s from \"./contactList.module.css\";\r\nimport shiftAnimation from \"../animation/shiftAnimation.module.css\";\r\nimport scaleAnimation from \"../animation/scaleAnimation.module.css\";\r\n\r\nimport { removeContactFromList } from \"../../redux/operations/phBookOperations\";\r\nimport {\r\n  getFilter,\r\n  getListContacts,\r\n  getVisibleContacts,\r\n} from \"../../redux/selectors/contactsSelectors\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const listContacts = useSelector((state) => getListContacts(state));\r\n  const visibleContacts = useSelector((state) => getVisibleContacts(state));\r\n  const filter = useSelector((state) => getFilter(state));\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={listContacts.length > 1}\r\n        classNames={scaleAnimation}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Filter filterValue={filter} />\r\n      </CSSTransition>\r\n\r\n      <TransitionGroup component=\"ul\">\r\n        {visibleContacts.map((item) => (\r\n          <CSSTransition\r\n            classNames={shiftAnimation}\r\n            timeout={250}\r\n            key={item.id}\r\n          >\r\n            <li className={s.listItem}>\r\n              <span className={s.itemName}>{item.name}</span>{\" \"}\r\n              <span>{item.number}</span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  dispatch(removeContactFromList(item.id));\r\n                }}\r\n              >\r\n                &#215;\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/operations/authOperation\";\r\nimport {\r\n  getCurentToken,\r\n  getUserEmail,\r\n} from \"../../redux/selectors/contactsSelectors\";\r\n\r\nimport s from \"./userMenu.module.css\";\r\n\r\nconst UserMenu = () => {\r\n  const curentToken = useSelector((state) => getCurentToken(state));\r\n  const userEmail = useSelector((state) => getUserEmail(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = (e) => {\r\n    dispatch(logoutUser(curentToken));\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h3 className={s.mail}>{userEmail}</h3>\r\n      <button type=\"submit\" onClick={handleLogout} className={s.btn}>\r\n        Logaut\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import React, { useEffect } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport s from \"../../components/app.module.css\";\r\n\r\nimport shiftAppear from \"../../components/animation/shiftAppear.module.css\";\r\nimport ContactForm from \"../../components/contactForm/ContactForm\";\r\nimport ContactList from \"../../components/contactList/ContactList\";\r\nimport ModalLoader from \"../../components/loader/ModalLoader\";\r\nimport { getLoading } from \"../../redux/selectors/contactsSelectors\";\r\nimport { getContactsList } from \"../../redux/operations/phBookOperations\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getIsAuthenticated } from \"../../redux/selectors/authSelectors\";\r\nimport UserMenu from \"../../components/userMenu/UserMenu\";\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector((state) => getIsAuthenticated(state));\r\n  const isLoading = useSelector((state) => getLoading(state));\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      history.replace(\"/login\");\r\n      return;\r\n    }\r\n    dispatch(getContactsList());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <ModalLoader />}\r\n      <div className={s.wrapper}>\r\n        <CSSTransition\r\n          in={true}\r\n          appear\r\n          classNames={shiftAppear}\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <div className={s.container}>\r\n            <h1 className={s.headerPhoneboo}>Phonebook</h1>\r\n            {isAuthenticated && <UserMenu />}\r\n          </div>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n        <ContactList />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"sourceRoot":""}